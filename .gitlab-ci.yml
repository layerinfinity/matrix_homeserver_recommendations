stages:
  - coverage
  - deploy
  - publish

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

code_analyze:
  stage: coverage
  image: google/dart
  dependencies: []
  script:
    - dart pub get
    - dart format lib/ test/ test_driver/ --set-exit-if-changed
    - dart analyze
    - dart run import_sorter:main --no-comments --exit-if-changed


dart_test:
  stage: coverage
  image: google/dart
  dependencies: [
    code_analyze
  ]
  script:
    - dart pub get
    - dart test

code_quality:
  stage: coverage
  image: google/dart
  before_script:
    - dart pub global activate dart_code_metrics
  script:
    - dart pub global run dart_code_metrics:metrics analyze lib -r gitlab > code-quality-report.json
  artifacts:
    reports:
      codequality: code-quality-report.json
    # also create an actual artifact for inspection purposes
    paths:
      - code-quality-report.json

dry-run:
  stage: publish
  image: google/dart
  script:
    - rm -rf ./docs
    - dart pub get
    - dart pub publish --dry-run

pub-dev:
  stage: publish
  image: google/dart
  script:
    - rm -rf ./docs
    - |
      if [ -z "${PUB_DEV_PUBLISH_ACCESS_TOKEN}" ]; then
        echo "Missing PUB_DEV_PUBLISH_ACCESS_TOKEN environment variable"
        exit 1
      fi

      if [ -z "${PUB_DEV_PUBLISH_REFRESH_TOKEN}" ]; then
        echo "Missing PUB_DEV_PUBLISH_REFRESH_TOKEN environment variable"
        exit 1
      fi

      if [ -z "${PUB_DEV_PUBLISH_TOKEN_ENDPOINT}" ]; then
        echo "Missing PUB_DEV_PUBLISH_TOKEN_ENDPOINT environment variable"
        exit 1
      fi

      if [ -z "${PUB_DEV_PUBLISH_EXPIRATION}" ]; then
        echo "Missing PUB_DEV_PUBLISH_EXPIRATION environment variable"
        exit 1
      fi

      cat <<EOF > ~/.pub-cache/credentials.json
      {
        "accessToken":"$(echo "${PUB_DEV_PUBLISH_ACCESS_TOKEN}" | base64 -d)",
        "refreshToken":"$(echo "${PUB_DEV_PUBLISH_REFRESH_TOKEN}" | base64 -d)",
        "tokenEndpoint":"${PUB_DEV_PUBLISH_TOKEN_ENDPOINT}",
        "scopes":["https://www.googleapis.com/auth/userinfo.email","openid"],
        "expiration":${PUB_DEV_PUBLISH_EXPIRATION}
      }
      EOF
    - dart pub get
    - dart pub publish --force
  rules:
    - if: $CI_COMMIT_TAG
